(int) get_stored_coin_price() method_id {
  slice data = get_data().begin_parse();
  return (data~load_uint(64));
}

() recv_internal (cell in_msg, slice in_msg_body) {
  if (in_msg_body.slice_empty?()) {
    return ();
  }
  
  slice cs = in_msg.begin_parse();
  int flags = cs~load_uint(4);
  slice sender_address = cs~load_msg_addr();
  int op = in_msg_body~load_uint(32);
  
  ;; TODO: need to add address checker that sender_address == stored server address
  if (op == op::update()) {
    int coin_price = in_msg_body~load_uint(64);
    cell data = begin_cell().store_uint(coin_price, 64).end_cell();
    set_data(data);
  }
  
  ;; TODO: need to add address checker (if requesting address == stored user address)
  if (op == op::fetch()) {
    int coin_price = get_stored_coin_price();
    ;; TODO: add fees payment to treasure
    
    cell mssage = begin_cell()
      .store_uint(0x18, 6)
      .store_slice(sender_address)
      .store_coins(0)
      .store_uint(0, 1 + 4 + 4 + 64 + 32 + 1)
      .store_uint(1, 1)
      .store_ref(begin_cell().store_uint(0, 32).store_uint(coin_price, 64).end_cell())
      .end_cell();
    send_raw_message(mssage, 64);
  }
  
  return(); 
}
